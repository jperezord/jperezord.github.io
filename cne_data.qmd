---
output: html_document
editor_options: 
  chunk_output_type: console
---

# CNE data {#sec-cne}

Load packages:

```{r}
# loading of packages required for the analyses
pacman::p_load(
      here,      # file locator
      tidyverse, # data management and ggplot2 graphics
      skimr,     # get overview of data
      janitor    # produce and adorn tabulations and cross-tabulations
)
```

## CNE diagnostic technique

Number of cases by diagnostic technique and province of residence \[[link](https://cnecovid.isciii.es/covid19/resources/metadata_tecnica_ccaa_prov_res.pdf)\]:

-   provincia_iso: ISO code of the province of residence.
-   fecha: date \[From pandemic onset to May 10, the date of symptom onset or, if not, the date of diagnosis minus 6 days. symptoms or, in the absence of symptoms, the date of diagnosis minus 6 days. From May 11, the date of symptom onset, or in the absence thereof, the date of diagnosis minus 3 days, or the date of diagnosis for cases date of diagnosis minus 3 days, or the date of diagnosis for asymptomatic cases. asymptomatic cases.
-   num_casos: Number of cases by diagnostic technique and province of residence.
-   num_casos_prueba_pcr: Number of cases with PCR laboratory test or molecular techniques.
-   num_casos_prueba_test_ac: Number of cases with laboratory test of rapid antibody test.
-   num_casos_prueba_ag: Number of cases with laboratory test of antigen detection test antigen test.
-   num_casos_prueba_elisa: Number of cases with high-resolution serology laboratory testing.
-   num_casos_prueba_desconocida: Number of cases without information on laboratory testing.

```{r}
cne_tecnica <- read_csv(
      file = here("data", "raw", "casos_tecnica_provincia.csv"),
      show_col_types = FALSE
)
cne_tecnica
```

Check data distribution and missing data.

```{r}
skim(cne_tecnica)
```


```{r}
#| warning = FALSE
cne_tecnica %>%  
      tabyl(provincia_iso) %>% 
      adorn_pct_formatting() %>%
      adorn_title(row_name = "Province")
```

Cleaning NAs

```{r}
cne_tecnica <- cne_tecnica %>% 
      drop_na(provincia_iso)
      
# Show data information
skim(cne_tecnica)
```


## CNE hospitalizations

Number of cases, hospitalisations, admissions to ICU and deaths by sex, age and province of residence \[[link](https://cnecovid.isciii.es/covid19/resources/metadata_diag_ccaa_decl_prov_edad_sexo.pdf)\]:

-   provincia_iso:ISO code of the province of residence.
-   fecha:
    -   Cases: For cases prior to 11-May, the date of diagnosis is used, in its absence the date of declaration to the community and, in its absence, the key date (key date). the date of declaration to the community and, in its absence, the key date (date used for statistics by the Autonomous used for statistics by the Autonomous Regions). In cases after 10 May, in the absence of a diagnosis date, the date used is the date of diagnosis. date of diagnosis, the key date is used.

    -   Hospitalisations, ICU admissions, deaths: hospitalised cases are represented by date of hospitalisation (failing this, date of diagnosis, and if not, date of death).
-   sexo: sex of cases: H (male), M (female), NC (not stated)
-   grupo_edad: age group to which the case belongs: 0-9, 10-19, 20-29, 30-39, 40-49, 50-59, 60-69, 70-79, â‰¥80 years. NC: not stated
-   num_casos: number of reported cases confirmed as having a positive diagnostic test for active infection (PDIA) as infection (PDIA) as set out in the Early Detection Strategy, surveillance and control strategy for COVID-19 and in addition cases notified before 11-May that required hospitalisation, ICU admission or required hospitalisation, ICU admission or died with a clinical diagnosis of COVID19, according to the case definitions in force at the time.
-   num_hosp: number of hospitalised cases
-   num_uci: number of cases admitted to ICU
-   num_def: number of deaths

```{r}
cne_hosp_data <- read_csv(
      file = here("data", "raw", "casos_hosp_uci_def_sexo_edad_provres.csv"),
      show_col_types = FALSE
)
cne_hosp_data
```

Check data distribution and missing data.

```{r}
skim(cne_hosp_data)
```

```{r}
cne_hosp_data %>% 
      tabyl(provincia_iso, sexo) %>% 
      adorn_totals(where = "col") %>% 
      adorn_percentages(denominator = "col") %>% 
      adorn_pct_formatting() %>% 
      adorn_ns(position = "front") %>% 
      adorn_title(
            row_name = "Province",
            col_name = "Gender",
            placement = "combined")
```

Cleaning NAs

```{r}
cne_hosp_data <- cne_hosp_data %>% 
      drop_na(provincia_iso)
skim(cne_hosp_data)
```

## Combination

We proceed to combine both datasets.

Before the combination it is neccesary to group the demographic data from the hospitalisation dataframe.

```{r}
cne_hosp_data_grouped <-  cne_hosp_data %>% 
      group_by(provincia_iso, fecha) %>% 
      summarise_at(vars(num_casos, num_hosp, num_uci, num_def), sum)
```

Data combination:

```{r}
cne_data <- inner_join(cne_tecnica, 
                       cne_hosp_data_grouped, 
                       by = c("provincia_iso", "fecha"))
cne_data
```

The total number of cases aggregated from hospitalisation data ('num_casos.y') should be the same as the data extracted from the detection tecnica.

```{r}
str_glue("Is the aggregated data equal? {sum(cne_data$num_casos.x) == sum(cne_data$num_casos.y)}")
str_glue("Summatory from tecnica data: {sum(cne_data$num_casos.x)}")
str_glue("Summatory from hospitalisation data: {sum(cne_data$num_casos.y)}")
```

Hence it is possible to remove one of them.

```{r}
cne_data <- cne_data %>% 
      rename(num_casos = num_casos.x) %>% 
      select(-num_casos.y)             # Remove num_casos from hospitalisation data)
```

Result:

```{r}
cne_data
```

The data contains information from `r min(cne_data$fecha)` to `r max(cne_data$fecha)`.
