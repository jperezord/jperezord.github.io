# Task 3: Visual analysis {.unnumbered}

## Introduction

As previously mentioned, the visual analysis will focus on the following provinces:

-   Asturias
-   Barcelona
-   Madrid
-   Málaga
-   Sevilla

First, we need to load packages and clean data generated during previous tasks:

```{r}
pacman::p_load(
      here,      # file locator
      tidyverse, # data management and ggplot2 graphics
      skimr,     # get overview of data
      janitor,   # produce and adorn tabulations and cross-tabulations
      lubridate, # manage dates
      PerformanceAnalytics,
      factoextra
)

covid_data <- readRDS(here("data", "clean", "final_covid_data.rds"))
covid_data
```

## Covid-19 indicatives

### Number of cases

According to CNE, in the evolution of the COVID-19 pandemic in Spain, there have been six periods:

-   First period: From the beginning of the pandemic until June 21, 2020, date on which the state of alarm in Spain ended after the end of the first epidemic outbreak of COVID-19.

-   Second period: June 22 through December 6, 2020, the turning point of the 14-day cumulative incidence (CI) of COVID-19 cases, between the second and third periods.

-   Third period: December 7, 2020 through March 14, 2021, AI tipping point at 14 days of COVID-19 cases, between the third and fourth epidemic periods.

-   Fourth period: March 15, 2021 through June 19, the 14-day AI tipping point for COVID-19 cases, between the fourth and fifth epidemic periods.

-   Fifth period: June 20, 2021 through October 13, AI tipping point at 14 days of COVID-19 cases, between the fifth and sixth epidemic periods.

-   Sixth period: From October 14, 2021 to the present, which may vary depending on the epidemiological situation of the pandemic in Spain.

In the following plots, those periods are marked with vertical dashed lines.

```{r}
covid_data %>% 
      ggplot(aes(x = fecha, y = num_casos)) +
      geom_line(aes(color = provincia)) +
      geom_vline(xintercept = as.Date("2020-06-21", format = "%Y-%m-%d"), linetype="dashed") +
      geom_vline(xintercept = as.Date("2020-12-06", format = "%Y-%m-%d"), linetype="dashed") +
      geom_vline(xintercept = as.Date("2021-03-14", format = "%Y-%m-%d"), linetype="dashed") +
      geom_vline(xintercept = as.Date("2021-06-19", format = "%Y-%m-%d"), linetype="dashed") +
      geom_vline(xintercept = as.Date("2021-10-13", format = "%Y-%m-%d"), linetype="dashed") +
      facet_wrap(~provincia, ncol=1) +
      theme(legend.position = "top") +
      labs(title="Cases reported by Province",
           x ="Date", y = "Nº of cases") +
      theme_bw()
```

The incidence of Covid-19 in Madrid and Barcelona are much larger than in the rest of the provinces, mainly due to the number of inhabitants. The next figure show the same information than the previous one but freeing the y-axis scale.

This approach will be followed in further plots.

```{r}
covid_data %>% 
      ggplot(aes(x = fecha, y = num_casos)) +
      geom_line(aes(color = provincia)) +
      geom_vline(xintercept = as.Date("2020-06-21", format = "%Y-%m-%d"), linetype="dashed") +
      geom_vline(xintercept = as.Date("2020-12-06", format = "%Y-%m-%d"), linetype="dashed") +
      geom_vline(xintercept = as.Date("2021-03-14", format = "%Y-%m-%d"), linetype="dashed") +
      geom_vline(xintercept = as.Date("2021-06-19", format = "%Y-%m-%d"), linetype="dashed") +
      geom_vline(xintercept = as.Date("2021-10-13", format = "%Y-%m-%d"), linetype="dashed") +
      facet_wrap(~provincia, scales = "free_y", ncol=1) +
      theme(legend.position = "top") +
      labs(title="Cases reported by Province (free y axis)",
           x ="Date", y = "Nº of cases") +
      theme_bw()
```

Normality study

```{r}
#| warning = FALSE
# Histogram with density plot
covid_data %>% 
      ggplot(aes(x=num_casos)) + 
      geom_histogram(aes(y=..density..), colour="black", fill="white")+
      geom_density(alpha=.2, fill="#FF6666") +
      facet_wrap(~provincia, scales = "free_y", ncol=1) +
      theme_bw()
```

```{r}
covid_data %>% 
      filter(provincia == "Asturias") %>% 
      pull(num_casos) %>% 
      qqnorm()
covid_data %>% 
      filter(provincia == "Barcelona") %>% 
      pull(num_casos) %>% 
      qqnorm()
covid_data %>% 
      filter(provincia == "Madrid") %>% 
      pull(num_casos) %>% 
      qqnorm()
covid_data %>% 
      filter(provincia == "Málaga") %>% 
      pull(num_casos) %>% 
      qqnorm()
covid_data %>% 
      filter(provincia == "Sevilla") %>% 
      pull(num_casos) %>% 
      qqnorm()
```

### Number of PCR positives:

```{r}
covid_data %>% 
      ggplot(aes(x = fecha)) +
      geom_line(aes(y = num_casos_prueba_pcr, color = provincia)) +
      geom_vline(xintercept = as.Date("2020-06-21", format = "%Y-%m-%d"), linetype="dashed") +
      geom_vline(xintercept = as.Date("2020-12-06", format = "%Y-%m-%d"), linetype="dashed") +
      geom_vline(xintercept = as.Date("2021-03-14", format = "%Y-%m-%d"), linetype="dashed") +
      geom_vline(xintercept = as.Date("2021-06-19", format = "%Y-%m-%d"), linetype="dashed") +
      geom_vline(xintercept = as.Date("2021-10-13", format = "%Y-%m-%d"), linetype="dashed") +
      facet_wrap(~provincia, scales = "free_y", ncol=1) +
      theme(legend.position = "top") +
      labs(title="PCR positives reported by Province",
           x ="Date", y = "Nº of PCR positives") +
      theme_bw()
```

Number of covid cases accounted by positive PCR tests:

```{r}
covid_data %>% 
      ggplot(aes(x = fecha)) +
      geom_area(aes(y = num_casos_prueba_pcr)) +
      geom_line(aes(y = num_casos, color = provincia)) +
      geom_vline(xintercept = as.Date("2020-06-21", format = "%Y-%m-%d"), linetype="dashed") +
      geom_vline(xintercept = as.Date("2020-12-06", format = "%Y-%m-%d"), linetype="dashed") +
      geom_vline(xintercept = as.Date("2021-03-14", format = "%Y-%m-%d"), linetype="dashed") +
      geom_vline(xintercept = as.Date("2021-06-19", format = "%Y-%m-%d"), linetype="dashed") +
      geom_vline(xintercept = as.Date("2021-10-13", format = "%Y-%m-%d"), linetype="dashed") +
      facet_wrap(~provincia, scales = "free_y", ncol=1) +
      theme(legend.position = "top") +
      labs(title="Porportion of positives cases based on positive PCR test",
           x ="Date", y = "Nº of cases") +
      theme_bw()
```

### Number of hospitalizations:

```{r}
covid_data %>% 
      ggplot() +
      geom_line(aes(x = fecha, y = num_hosp, color = provincia)) +
      geom_vline(xintercept = as.Date("2020-06-21", format = "%Y-%m-%d"), linetype="dashed") +
      geom_vline(xintercept = as.Date("2020-12-06", format = "%Y-%m-%d"), linetype="dashed") +
      geom_vline(xintercept = as.Date("2021-03-14", format = "%Y-%m-%d"), linetype="dashed") +
      geom_vline(xintercept = as.Date("2021-06-19", format = "%Y-%m-%d"), linetype="dashed") +
      geom_vline(xintercept = as.Date("2021-10-13", format = "%Y-%m-%d"), linetype="dashed") +
      facet_wrap(~provincia, scales = "free_y", ncol=1) +
      theme(legend.position = "top") +
      labs(title="Hospitalization cases reported by Province",
           x ="Date", y = "Nº of hospitazations") +
      theme_bw()
```

Number of hospitalizations vs number of cases:

```{r}
# Value used to transform the data
coeff <- 20

# A few constants for colors
temperatureColor <- "#ff9e81"
priceColor <- rgb(0.2, 0.6, 0.9, 1)

covid_data %>% 
      ggplot(aes(x = fecha)) +
      geom_line( aes(y = num_hosp), size=1, color=temperatureColor) + 
      geom_line( aes(y = num_casos / coeff), size=1, color=priceColor) +
      geom_vline(xintercept = as.Date("2020-06-21", format = "%Y-%m-%d"), linetype="dashed") +
      geom_vline(xintercept = as.Date("2020-12-06", format = "%Y-%m-%d"), linetype="dashed") +
      geom_vline(xintercept = as.Date("2021-03-14", format = "%Y-%m-%d"), linetype="dashed") +
      geom_vline(xintercept = as.Date("2021-06-19", format = "%Y-%m-%d"), linetype="dashed") +
      geom_vline(xintercept = as.Date("2021-10-13", format = "%Y-%m-%d"), linetype="dashed") +
      scale_y_continuous(
            # Features of the first axis
            name = "Number of hospitalizations",
            # Add a second axis and specify its features
            sec.axis = sec_axis(~.*coeff, name="Nº of cases")
      ) +
      facet_wrap(~provincia, scales = "free_y", ncol=1) +
      theme_bw() +
      theme(
            axis.title.y = element_text(color = temperatureColor, size=13),
            axis.title.y.right = element_text(color = priceColor, size=13)
      ) +
      ggtitle("Hospitalization cases vs number of cases")
```

### Number of UCI hospitalizations:

```{r}
covid_data %>% 
      ggplot() +
      geom_line(aes(x = fecha, y = num_uci, color = provincia)) +
      geom_vline(xintercept = as.Date("2020-06-21", format = "%Y-%m-%d"), linetype="dashed") +
      geom_vline(xintercept = as.Date("2020-12-06", format = "%Y-%m-%d"), linetype="dashed") +
      geom_vline(xintercept = as.Date("2021-03-14", format = "%Y-%m-%d"), linetype="dashed") +
      geom_vline(xintercept = as.Date("2021-06-19", format = "%Y-%m-%d"), linetype="dashed") +
      geom_vline(xintercept = as.Date("2021-10-13", format = "%Y-%m-%d"), linetype="dashed") +
      facet_wrap(~provincia, scales = "free_y", ncol=1) +
      theme(legend.position = "top") +
      labs(title="UCI hospitalization cases reported by Province",
           x ="Date", y = "Nº of UCI hospitazations") +
      theme_bw()
```

Number of UCI hospitalizations vs number of cases:

```{r}
# Value used to transform the data
coeff <- 300

# A few constants for colors
temperatureColor <- "#ff9e81"
priceColor <- rgb(0.2, 0.6, 0.9, 1)

covid_data %>% 
      ggplot(aes(x = fecha)) +
      geom_line( aes(y = num_uci), size=1, color=temperatureColor) + 
      geom_line( aes(y = num_casos / coeff), size=1, color=priceColor) +
      geom_vline(xintercept = as.Date("2020-06-21", format = "%Y-%m-%d"), linetype="dashed") +
      geom_vline(xintercept = as.Date("2020-12-06", format = "%Y-%m-%d"), linetype="dashed") +
      geom_vline(xintercept = as.Date("2021-03-14", format = "%Y-%m-%d"), linetype="dashed") +
      geom_vline(xintercept = as.Date("2021-06-19", format = "%Y-%m-%d"), linetype="dashed") +
      geom_vline(xintercept = as.Date("2021-10-13", format = "%Y-%m-%d"), linetype="dashed") +
      scale_y_continuous(
            # Features of the first axis
            name = "Number of UCI hospitalizations",
            # Add a second axis and specify its features
            sec.axis = sec_axis(~.*coeff, name="Nº of cases")
      ) +
      facet_wrap(~provincia, scales = "free_y", ncol=1) +
      theme_bw() +
      theme(
            axis.title.y = element_text(color = temperatureColor, size=13),
            axis.title.y.right = element_text(color = priceColor, size=13)
      ) +
      ggtitle("UCI hospitalization vs number of cases")
```

### Number of deaths

```{r}
covid_data %>% 
      ggplot() +
      geom_line(aes(x = fecha, y = num_def, color = provincia)) +
      geom_vline(xintercept = as.Date("2020-06-21", format = "%Y-%m-%d"), linetype="dashed") +
      geom_vline(xintercept = as.Date("2020-12-06", format = "%Y-%m-%d"), linetype="dashed") +
      geom_vline(xintercept = as.Date("2021-03-14", format = "%Y-%m-%d"), linetype="dashed") +
      geom_vline(xintercept = as.Date("2021-06-19", format = "%Y-%m-%d"), linetype="dashed") +
      geom_vline(xintercept = as.Date("2021-10-13", format = "%Y-%m-%d"), linetype="dashed") +
      facet_wrap(~provincia, scales = "free_y", ncol=1) +
      theme(legend.position = "top") +
      labs(title="Deaths reported by Province",
           x ="Date", y = "Nº of deaths") +
      theme_bw()
```

```{r}
# Value used to transform the data
coeff <- 100

# A few constants for colors
temperatureColor <- "#ff9e81"
priceColor <- rgb(0.2, 0.6, 0.9, 1)

covid_data %>% 
      ggplot(aes(x = fecha)) +
      geom_line( aes(y = num_def), size=1, color=temperatureColor) + 
      geom_line( aes(y = num_casos / coeff), size=1, color=priceColor) +
      geom_vline(xintercept = as.Date("2020-06-21", format = "%Y-%m-%d"), linetype="dashed") +
      geom_vline(xintercept = as.Date("2020-12-06", format = "%Y-%m-%d"), linetype="dashed") +
      geom_vline(xintercept = as.Date("2021-03-14", format = "%Y-%m-%d"), linetype="dashed") +
      geom_vline(xintercept = as.Date("2021-06-19", format = "%Y-%m-%d"), linetype="dashed") +
      geom_vline(xintercept = as.Date("2021-10-13", format = "%Y-%m-%d"), linetype="dashed") +
      scale_y_continuous(
            # Features of the first axis
            name = "Number of deaths",
            # Add a second axis and specify its features
            sec.axis = sec_axis(~.*coeff, name="Nº of cases")
      ) +
      facet_wrap(~provincia, scales = "free_y", ncol=1) +
      theme_bw() +
      theme(
            axis.title.y = element_text(color = temperatureColor, size=13),
            axis.title.y.right = element_text(color = priceColor, size=13)
      ) +
      ggtitle("Number of deaths vs number of cases")
```

### hospitalizations vs uci vs deaths

```{r}
covid_data %>% 
      ggplot() +
      # geom_line(aes(x = fecha, y = num_uci, color = provincia)) +
      # geom_line(aes(x = fecha, y = num_hosp, color = provincia)) +
      # geom_line(aes(x = fecha, y = num_def, color = provincia)) +
      geom_line(aes(x = fecha, y = num_uci, color = "red")) +
      geom_line(aes(x = fecha, y = num_hosp, color = "black")) +
      geom_line(aes(x = fecha, y = num_def, color = "blue")) +
      geom_vline(xintercept = as.Date("2020-06-21", format = "%Y-%m-%d"), linetype="dashed") +
      geom_vline(xintercept = as.Date("2020-12-06", format = "%Y-%m-%d"), linetype="dashed") +
      geom_vline(xintercept = as.Date("2021-03-14", format = "%Y-%m-%d"), linetype="dashed") +
      geom_vline(xintercept = as.Date("2021-06-19", format = "%Y-%m-%d"), linetype="dashed") +
      geom_vline(xintercept = as.Date("2021-10-13", format = "%Y-%m-%d"), linetype="dashed") +
      facet_wrap(~provincia, scales = "free_y", ncol=1) +
      theme(legend.position = "top") +
      labs(title="Hospitalization vs uci vs deaths reported by Province",
           x ="Date", y = "Nº of cases reported (hosp/uci/deaths)") +
      theme_bw() +
      theme(legend.position = "none") 
```

```{r}
# Value used to transform the data
coeff <- 50

# A few constants for colors
priceColor <- rgb(0.2, 0.6, 0.9, 1)

covid_data %>% 
      ggplot(aes(x = fecha)) +
      geom_line(aes(x = fecha, y = num_uci, color = "red")) +
      geom_line(aes(x = fecha, y = num_hosp, color = "black")) +
      geom_line(aes(x = fecha, y = num_def, color = "blue")) +
      geom_line( aes(y = num_casos / coeff), size=1, color=priceColor) +
      geom_vline(xintercept = as.Date("2020-06-21", format = "%Y-%m-%d"), linetype="dashed") +
      geom_vline(xintercept = as.Date("2020-12-06", format = "%Y-%m-%d"), linetype="dashed") +
      geom_vline(xintercept = as.Date("2021-03-14", format = "%Y-%m-%d"), linetype="dashed") +
      geom_vline(xintercept = as.Date("2021-06-19", format = "%Y-%m-%d"), linetype="dashed") +
      geom_vline(xintercept = as.Date("2021-10-13", format = "%Y-%m-%d"), linetype="dashed") +
      scale_y_continuous(
            # Features of the first axis
            name = "Nº of cases reported (hosp/uci/deaths)",
            # Add a second axis and specify its features
            sec.axis = sec_axis(~.*coeff, name="Nº of cases")
      ) +
      facet_wrap(~provincia, scales = "free_y", ncol=1) +
      theme_bw() +
      theme(
            axis.title.y = element_text(size=13),
            axis.title.y.right = element_text(color = priceColor, size=13),
            legend.position = "none") +
      ggtitle("Hospitalization vs uci vs deaths vs number of cases")
```

## Meteorology

### tmed vs tmin

```{r}
covid_data %>% 
      ggplot(aes(x = fecha)) +
      geom_line(aes(y = tmed, color = provincia)) +
      geom_line(aes(y = tmin, color = provincia)) +
      geom_vline(xintercept = as.Date("2020-06-21", format = "%Y-%m-%d"), linetype="dashed") +
      geom_vline(xintercept = as.Date("2020-12-06", format = "%Y-%m-%d"), linetype="dashed") +
      geom_vline(xintercept = as.Date("2021-03-14", format = "%Y-%m-%d"), linetype="dashed") +
      geom_vline(xintercept = as.Date("2021-06-19", format = "%Y-%m-%d"), linetype="dashed") +
      geom_vline(xintercept = as.Date("2021-10-13", format = "%Y-%m-%d"), linetype="dashed") +
      facet_wrap(~provincia, scales = "free_y", ncol=1) +
      theme(legend.position = "top") +
      labs(title="Evolution of temperature by Province",
           x ="Date", y = "Temperature (Celsius °)") +
      theme_bw()
```

Evolution of temperature vs number cases:

```{r}
# Value used to transform the data
coeff <- 400

# A few constants for colors
temperatureColor <- "#ff9e81"
priceColor <- rgb(0.2, 0.6, 0.9, 1)

covid_data %>% 
      ggplot(aes(x = fecha)) +
      geom_line( aes(y = tmin), size=1, color=temperatureColor) + 
      geom_line( aes(y = num_casos / coeff), size=1, color=priceColor) +
      geom_vline(xintercept = as.Date("2020-06-21", format = "%Y-%m-%d"), linetype="dashed") +
      geom_vline(xintercept = as.Date("2020-12-06", format = "%Y-%m-%d"), linetype="dashed") +
      geom_vline(xintercept = as.Date("2021-03-14", format = "%Y-%m-%d"), linetype="dashed") +
      geom_vline(xintercept = as.Date("2021-06-19", format = "%Y-%m-%d"), linetype="dashed") +
      geom_vline(xintercept = as.Date("2021-10-13", format = "%Y-%m-%d"), linetype="dashed") +
      scale_y_continuous(
            # Features of the first axis
            name = "Temperature (Celsius °)",
            # Add a second axis and specify its features
            sec.axis = sec_axis(~.*coeff, name="Nº of cases")
      ) +
      facet_wrap(~provincia, scales = "free_y", ncol=1) +
      theme_bw() +
      theme(
            axis.title.y = element_text(color = temperatureColor, size=13),
            axis.title.y.right = element_text(color = priceColor, size=13)
      ) +
      ggtitle("Temperature variation vs number of cases")
```

### Precipitations

```{r}
covid_data %>% 
      ggplot(aes(x = fecha)) +
      geom_area(aes(y = prec, fill = provincia)) +
      geom_vline(xintercept = as.Date("2020-06-21", format = "%Y-%m-%d"), linetype="dashed") +
      geom_vline(xintercept = as.Date("2020-12-06", format = "%Y-%m-%d"), linetype="dashed") +
      geom_vline(xintercept = as.Date("2021-03-14", format = "%Y-%m-%d"), linetype="dashed") +
      geom_vline(xintercept = as.Date("2021-06-19", format = "%Y-%m-%d"), linetype="dashed") +
      geom_vline(xintercept = as.Date("2021-10-13", format = "%Y-%m-%d"), linetype="dashed") +
      facet_wrap(~provincia, scales = "free_y", ncol=1) +
      theme(legend.position = "top") +
      labs(title="Precipitations meassured by Province",
           x ="Date", y = "Precipitation (mm)") +
      theme_bw()
```

Precipitations vs number cases:

```{r}
# Value used to transform the data
coeff <- 200

# A few constants for colors
temperatureColor <- "#ff9e81"
priceColor <- rgb(0.2, 0.6, 0.9, 1)

covid_data %>% 
      ggplot(aes(x = fecha)) +
      geom_line( aes(y = prec), size=1, color=temperatureColor) + 
      geom_line( aes(y = num_casos / coeff), size=1, color=priceColor) +
      geom_vline(xintercept = as.Date("2020-06-21", format = "%Y-%m-%d"), linetype="dashed") +
      geom_vline(xintercept = as.Date("2020-12-06", format = "%Y-%m-%d"), linetype="dashed") +
      geom_vline(xintercept = as.Date("2021-03-14", format = "%Y-%m-%d"), linetype="dashed") +
      geom_vline(xintercept = as.Date("2021-06-19", format = "%Y-%m-%d"), linetype="dashed") +
      geom_vline(xintercept = as.Date("2021-10-13", format = "%Y-%m-%d"), linetype="dashed") +
      scale_y_continuous(
            # Features of the first axis
            name = "Precipitation (mm)",
            # Add a second axis and specify its features
            sec.axis = sec_axis(~.*coeff, name="Nº of cases")
      ) +
      facet_wrap(~provincia, scales = "free_y", ncol=1) +
      theme_bw() +
      theme(
            axis.title.y = element_text(color = temperatureColor, size=13),
            axis.title.y.right = element_text(color = priceColor, size=13)
      ) +
      ggtitle("Precipitations meassured vs number of cases")
```

## Mobility

### grocery and pharmacy

```{r}
#| warning = FALSE
covid_data %>% 
      ggplot(aes(x = fecha)) +
      geom_line(aes(y = mob_grocery_pharmacy, color = provincia)) +
      geom_vline(xintercept = as.Date("2020-06-21", format = "%Y-%m-%d"), linetype="dashed") +
      geom_vline(xintercept = as.Date("2020-12-06", format = "%Y-%m-%d"), linetype="dashed") +
      geom_vline(xintercept = as.Date("2021-03-14", format = "%Y-%m-%d"), linetype="dashed") +
      geom_vline(xintercept = as.Date("2021-06-19", format = "%Y-%m-%d"), linetype="dashed") +
      geom_vline(xintercept = as.Date("2021-10-13", format = "%Y-%m-%d"), linetype="dashed") +
      facet_wrap(~provincia, scales = "free_y", ncol=1) +
      theme(legend.position = "top") +
      labs(title="Grocery and pharmacy",
           x ="Date", y = "Flujo (% ref day)") +
      theme_bw()
```

```{r}
#| warning = FALSE
# Value used to transform the data
coeff <- 50

# A few constants for colors
temperatureColor <- "#ff9e81"
priceColor <- rgb(0.2, 0.6, 0.9, 1)

covid_data %>% 
      ggplot(aes(x = fecha)) +
      geom_line( aes(y = mob_grocery_pharmacy), size=1, color=temperatureColor) + 
      geom_line( aes(y = num_casos / coeff), size=1, color=priceColor) +
      geom_vline(xintercept = as.Date("2020-06-21", format = "%Y-%m-%d"), linetype="dashed") +
      geom_vline(xintercept = as.Date("2020-12-06", format = "%Y-%m-%d"), linetype="dashed") +
      geom_vline(xintercept = as.Date("2021-03-14", format = "%Y-%m-%d"), linetype="dashed") +
      geom_vline(xintercept = as.Date("2021-06-19", format = "%Y-%m-%d"), linetype="dashed") +
      geom_vline(xintercept = as.Date("2021-10-13", format = "%Y-%m-%d"), linetype="dashed") +
      scale_y_continuous(
            # Features of the first axis
            name = "Visits to groceries and pharmacies (%)",
            # Add a second axis and specify its features
            sec.axis = sec_axis(~.*coeff, name="Nº of cases")
      ) +
      facet_wrap(~provincia, scales = "free_y", ncol=1) +
      theme_bw() +
      theme(
            axis.title.y = element_text(color = temperatureColor, size=13),
            axis.title.y.right = element_text(color = priceColor, size=13)
      ) +
      ggtitle("Visits to groceries and pharmacies vs number of cases")
```

### parks

```{r}
#| warning = FALSE
covid_data %>% 
      ggplot(aes(x = fecha)) +
      geom_line(aes(y = mob_parks, color = provincia)) +
      geom_vline(xintercept = as.Date("2020-06-21", format = "%Y-%m-%d"), linetype="dashed") +
      geom_vline(xintercept = as.Date("2020-12-06", format = "%Y-%m-%d"), linetype="dashed") +
      geom_vline(xintercept = as.Date("2021-03-14", format = "%Y-%m-%d"), linetype="dashed") +
      geom_vline(xintercept = as.Date("2021-06-19", format = "%Y-%m-%d"), linetype="dashed") +
      geom_vline(xintercept = as.Date("2021-10-13", format = "%Y-%m-%d"), linetype="dashed") +
      facet_wrap(~provincia, scales = "free_y", ncol=1) +
      theme(legend.position = "top") +
      labs(title="Visits to parks by Province",
           x ="Date", y = "Flujo (% ref day)") +
      theme_bw()
```

```{r}
#| warning = FALSE
# Value used to transform the data
coeff <- 50

# A few constants for colors
temperatureColor <- "#ff9e81"
priceColor <- rgb(0.2, 0.6, 0.9, 1)

covid_data %>% 
      ggplot(aes(x = fecha)) +
      geom_line( aes(y = mob_grocery_pharmacy), size=1, color=temperatureColor) + 
      geom_line( aes(y = num_casos / coeff), size=1, color=priceColor) +
      geom_vline(xintercept = as.Date("2020-06-21", format = "%Y-%m-%d"), linetype="dashed") +
      geom_vline(xintercept = as.Date("2020-12-06", format = "%Y-%m-%d"), linetype="dashed") +
      geom_vline(xintercept = as.Date("2021-03-14", format = "%Y-%m-%d"), linetype="dashed") +
      geom_vline(xintercept = as.Date("2021-06-19", format = "%Y-%m-%d"), linetype="dashed") +
      geom_vline(xintercept = as.Date("2021-10-13", format = "%Y-%m-%d"), linetype="dashed") +
      scale_y_continuous(
            # Features of the first axis
            name = "Visits to parks (%)",
            # Add a second axis and specify its features
            sec.axis = sec_axis(~.*coeff, name="Nº of cases")
      ) +
      facet_wrap(~provincia, scales = "free_y", ncol=1) +
      theme_bw() +
      theme(
            axis.title.y = element_text(color = temperatureColor, size=13),
            axis.title.y.right = element_text(color = priceColor, size=13)
      ) +
      ggtitle("Visits to parks vs number of cases")
```

### residential

```{r}
#| warning = FALSE
covid_data %>% 
      ggplot(aes(x = fecha)) +
      geom_line(aes(y = mob_residential, color = provincia)) +
      geom_vline(xintercept = as.Date("2020-06-21", format = "%Y-%m-%d"), linetype="dashed") +
      geom_vline(xintercept = as.Date("2020-12-06", format = "%Y-%m-%d"), linetype="dashed") +
      geom_vline(xintercept = as.Date("2021-03-14", format = "%Y-%m-%d"), linetype="dashed") +
      geom_vline(xintercept = as.Date("2021-06-19", format = "%Y-%m-%d"), linetype="dashed") +
      geom_vline(xintercept = as.Date("2021-10-13", format = "%Y-%m-%d"), linetype="dashed") +
      facet_wrap(~provincia, scales = "free_y", ncol=1) +
      theme(legend.position = "top") +
      labs(title="Visits to residential places by Province",
           x ="Date", y = "Flujo (% ref day)") +
      theme_bw()
```

```{r}
#| warning = FALSE
# Value used to transform the data
coeff <- 50

# A few constants for colors
temperatureColor <- "#ff9e81"
priceColor <- rgb(0.2, 0.6, 0.9, 1)

covid_data %>% 
      ggplot(aes(x = fecha)) +
      geom_line( aes(y = mob_grocery_pharmacy), size=1, color=temperatureColor) + 
      geom_line( aes(y = num_casos / coeff), size=1, color=priceColor) +
      geom_vline(xintercept = as.Date("2020-06-21", format = "%Y-%m-%d"), linetype="dashed") +
      geom_vline(xintercept = as.Date("2020-12-06", format = "%Y-%m-%d"), linetype="dashed") +
      geom_vline(xintercept = as.Date("2021-03-14", format = "%Y-%m-%d"), linetype="dashed") +
      geom_vline(xintercept = as.Date("2021-06-19", format = "%Y-%m-%d"), linetype="dashed") +
      geom_vline(xintercept = as.Date("2021-10-13", format = "%Y-%m-%d"), linetype="dashed") +
      scale_y_continuous(
            # Features of the first axis
            name = "Visits to residential places (%)",
            # Add a second axis and specify its features
            sec.axis = sec_axis(~.*coeff, name="Nº of cases")
      ) +
      facet_wrap(~provincia, scales = "free_y", ncol=1) +
      theme_bw() +
      theme(
            axis.title.y = element_text(color = temperatureColor, size=13),
            axis.title.y.right = element_text(color = priceColor, size=13)
      ) +
      ggtitle("Visits to residential places vs number of cases")
```

### retail and recreation

```{r}
#| warning = FALSE
covid_data %>% 
      ggplot(aes(x = fecha)) +
      geom_line(aes(y = mob_retail_recreation, color = provincia)) +
      geom_vline(xintercept = as.Date("2020-06-21", format = "%Y-%m-%d"), linetype="dashed") +
      geom_vline(xintercept = as.Date("2020-12-06", format = "%Y-%m-%d"), linetype="dashed") +
      geom_vline(xintercept = as.Date("2021-03-14", format = "%Y-%m-%d"), linetype="dashed") +
      geom_vline(xintercept = as.Date("2021-06-19", format = "%Y-%m-%d"), linetype="dashed") +
      geom_vline(xintercept = as.Date("2021-10-13", format = "%Y-%m-%d"), linetype="dashed") +
      facet_wrap(~provincia, scales = "free_y", ncol=1) +
      theme(legend.position = "top") +
      labs(title="Visits to retail and recreation places by Province",
           x ="Date", y = "Flujo (% ref day)") +
      theme_bw()
```

```{r}
#| warning = FALSE
# Value used to transform the data
coeff <- 50

# A few constants for colors
temperatureColor <- "#ff9e81"
priceColor <- rgb(0.2, 0.6, 0.9, 1)

covid_data %>% 
      ggplot(aes(x = fecha)) +
      geom_line( aes(y = mob_grocery_pharmacy), size=1, color=temperatureColor) + 
      geom_line( aes(y = num_casos / coeff), size=1, color=priceColor) +
      geom_vline(xintercept = as.Date("2020-06-21", format = "%Y-%m-%d"), linetype="dashed") +
      geom_vline(xintercept = as.Date("2020-12-06", format = "%Y-%m-%d"), linetype="dashed") +
      geom_vline(xintercept = as.Date("2021-03-14", format = "%Y-%m-%d"), linetype="dashed") +
      geom_vline(xintercept = as.Date("2021-06-19", format = "%Y-%m-%d"), linetype="dashed") +
      geom_vline(xintercept = as.Date("2021-10-13", format = "%Y-%m-%d"), linetype="dashed") +
      scale_y_continuous(
            # Features of the first axis
            name = "Visits to retail and recreation places (%)",
            # Add a second axis and specify its features
            sec.axis = sec_axis(~.*coeff, name="Nº of cases")
      ) +
      facet_wrap(~provincia, scales = "free_y", ncol=1) +
      theme_bw() +
      theme(
            axis.title.y = element_text(color = temperatureColor, size=13),
            axis.title.y.right = element_text(color = priceColor, size=13)
      ) +
      ggtitle("Visits to retail and recreation places vs number of cases")
```

### transit stations

```{r}
#| warning = FALSE
covid_data %>% 
      ggplot(aes(x = fecha)) +
      geom_line(aes(y = mob_transit_stations, color = provincia)) +
      geom_vline(xintercept = as.Date("2020-06-21", format = "%Y-%m-%d"), linetype="dashed") +
      geom_vline(xintercept = as.Date("2020-12-06", format = "%Y-%m-%d"), linetype="dashed") +
      geom_vline(xintercept = as.Date("2021-03-14", format = "%Y-%m-%d"), linetype="dashed") +
      geom_vline(xintercept = as.Date("2021-06-19", format = "%Y-%m-%d"), linetype="dashed") +
      geom_vline(xintercept = as.Date("2021-10-13", format = "%Y-%m-%d"), linetype="dashed") +
      facet_wrap(~provincia, scales = "free_y", ncol=1) +
      theme(legend.position = "top") +
      labs(title="Visits to trahsit stations by Province",
           x ="Date", y = "Flujo (% ref day)") +
      theme_bw()
```

```{r}
#| warning = FALSE
# Value used to transform the data
coeff <- 50

# A few constants for colors
temperatureColor <- "#ff9e81"
priceColor <- rgb(0.2, 0.6, 0.9, 1)

covid_data %>% 
      ggplot(aes(x = fecha)) +
      geom_line( aes(y = mob_transit_stations), size=1, color=temperatureColor) + 
      geom_line( aes(y = num_casos / coeff), size=1, color=priceColor) +
      geom_vline(xintercept = as.Date("2020-06-21", format = "%Y-%m-%d"), linetype="dashed") +
      geom_vline(xintercept = as.Date("2020-12-06", format = "%Y-%m-%d"), linetype="dashed") +
      geom_vline(xintercept = as.Date("2021-03-14", format = "%Y-%m-%d"), linetype="dashed") +
      geom_vline(xintercept = as.Date("2021-06-19", format = "%Y-%m-%d"), linetype="dashed") +
      geom_vline(xintercept = as.Date("2021-10-13", format = "%Y-%m-%d"), linetype="dashed") +
      scale_y_continuous(
            # Features of the first axis
            name = "Visits to transit stations (%)",
            # Add a second axis and specify its features
            sec.axis = sec_axis(~.*coeff, name="Nº of cases")
      ) +
      facet_wrap(~provincia, scales = "free_y", ncol=1) +
      theme_bw() +
      theme(
            axis.title.y = element_text(color = temperatureColor, size=13),
            axis.title.y.right = element_text(color = priceColor, size=13)
      ) +
      ggtitle("Visits to transit stations vs number of cases")
```

### workplaces

```{r}
#| warning = FALSE
covid_data %>% 
      ggplot(aes(x = fecha)) +
      geom_line(aes(y = mob_workplaces, color = provincia)) +
      geom_vline(xintercept = as.Date("2020-06-21", format = "%Y-%m-%d"), linetype="dashed") +
      geom_vline(xintercept = as.Date("2020-12-06", format = "%Y-%m-%d"), linetype="dashed") +
      geom_vline(xintercept = as.Date("2021-03-14", format = "%Y-%m-%d"), linetype="dashed") +
      geom_vline(xintercept = as.Date("2021-06-19", format = "%Y-%m-%d"), linetype="dashed") +
      geom_vline(xintercept = as.Date("2021-10-13", format = "%Y-%m-%d"), linetype="dashed") +
      facet_wrap(~provincia, scales = "free_y", ncol=1) +
      theme(legend.position = "top") +
      labs(title="Visits to workplaces by Province",
           x ="Date", y = "Flujo (% ref day)") +
      theme_bw()
```

```{r}
#| warning = FALSE
# Value used to transform the data
coeff <- 50

# A few constants for colors
temperatureColor <- "#ff9e81"
priceColor <- rgb(0.2, 0.6, 0.9, 1)

covid_data %>% 
      ggplot(aes(x = fecha)) +
      geom_line( aes(y = mob_transit_stations), size=1, color=temperatureColor) + 
      geom_line( aes(y = num_casos / coeff), size=1, color=priceColor) +
      geom_vline(xintercept = as.Date("2020-06-21", format = "%Y-%m-%d"), linetype="dashed") +
      geom_vline(xintercept = as.Date("2020-12-06", format = "%Y-%m-%d"), linetype="dashed") +
      geom_vline(xintercept = as.Date("2021-03-14", format = "%Y-%m-%d"), linetype="dashed") +
      geom_vline(xintercept = as.Date("2021-06-19", format = "%Y-%m-%d"), linetype="dashed") +
      geom_vline(xintercept = as.Date("2021-10-13", format = "%Y-%m-%d"), linetype="dashed") +
      scale_y_continuous(
            # Features of the first axis
            name = "Visits to workplaces (%)",
            # Add a second axis and specify its features
            sec.axis = sec_axis(~.*coeff, name="Nº of cases")
      ) +
      facet_wrap(~provincia, scales = "free_y", ncol=1) +
      theme_bw() +
      theme(
            axis.title.y = element_text(color = temperatureColor, size=13),
            axis.title.y.right = element_text(color = priceColor, size=13)
      ) +
      ggtitle("Visits to workplaces vs number of cases")
```

### Google mobility vs cases

```{r}
#| warning = FALSE
# Value used to transform the data
coeff <- 300

# A few constants for colors
priceColor <- rgb(0.2, 0.6, 0.9, 1)

p <- covid_data %>% 
      ggplot(aes(x = fecha)) +
      geom_line(aes(x = fecha, y = mob_grocery_pharmacy, color = "red")) +
      geom_line(aes(x = fecha, y = mob_parks, color = "black")) +
      geom_line(aes(x = fecha, y = mob_residential, color = "blue")) +
      geom_line(aes(x = fecha, y = mob_retail_recreation, color = "green")) +
      geom_line(aes(x = fecha, y = mob_transit_stations, color = "brown")) +
      geom_line(aes(x = fecha, y = mob_workplaces, color = "yellow")) +
      geom_line( aes(y = num_casos / coeff), size=1, color=priceColor) +
      geom_vline(xintercept = as.Date("2020-06-21", format = "%Y-%m-%d"), linetype="dashed") +
      geom_vline(xintercept = as.Date("2020-12-06", format = "%Y-%m-%d"), linetype="dashed") +
      geom_vline(xintercept = as.Date("2021-03-14", format = "%Y-%m-%d"), linetype="dashed") +
      geom_vline(xintercept = as.Date("2021-06-19", format = "%Y-%m-%d"), linetype="dashed") +
      geom_vline(xintercept = as.Date("2021-10-13", format = "%Y-%m-%d"), linetype="dashed") +
      scale_y_continuous(
            # Features of the first axis
            name = "Mobility variations (% ref day)",
            # Add a second axis and specify its features
            sec.axis = sec_axis(~.*coeff, name="Nº of cases")
      ) +
      facet_wrap(~provincia, scales = "free_y", ncol=1) +
      theme_bw() +
      theme(
            axis.title.y = element_text(size=13),
            axis.title.y.right = element_text(color = priceColor, size=13),
            legend.position = "none") +
      ggtitle("Mobility variations vs number of cases")

p
# ggplotly(p) # To make the graph interactive
```

### General mobility (INE study zones)

```{r}
#| warning = FALSE
covid_data %>% 
      ggplot(aes(x = fecha)) +
      geom_line(aes(y = mob_flujo, color = provincia)) +
      geom_vline(xintercept = as.Date("2020-06-21", format = "%Y-%m-%d"), linetype="dashed") +
      geom_vline(xintercept = as.Date("2020-12-06", format = "%Y-%m-%d"), linetype="dashed") +
      geom_vline(xintercept = as.Date("2021-03-14", format = "%Y-%m-%d"), linetype="dashed") +
      geom_vline(xintercept = as.Date("2021-06-19", format = "%Y-%m-%d"), linetype="dashed") +
      geom_vline(xintercept = as.Date("2021-10-13", format = "%Y-%m-%d"), linetype="dashed") +
      facet_wrap(~provincia, scales = "free_y", ncol=1) +
      theme(legend.position = "top") +
      labs(title="General mobility by Province",
           x ="Date", y = "Mobility (% ref day)") +
      theme_bw()
```

```{r}
#| warning = FALSE
# Value used to transform the data
coeff <- 200

# A few constants for colors
temperatureColor <- "#ff9e81"
priceColor <- rgb(0.2, 0.6, 0.9, 1)

covid_data %>% 
      ggplot(aes(x = fecha)) +
      geom_line( aes(y = mob_flujo), size=1, color=temperatureColor) + 
      geom_line( aes(y = num_casos / coeff), size=1, color=priceColor) +
      geom_vline(xintercept = as.Date("2020-06-21", format = "%Y-%m-%d"), linetype="dashed") +
      geom_vline(xintercept = as.Date("2020-12-06", format = "%Y-%m-%d"), linetype="dashed") +
      geom_vline(xintercept = as.Date("2021-03-14", format = "%Y-%m-%d"), linetype="dashed") +
      geom_vline(xintercept = as.Date("2021-06-19", format = "%Y-%m-%d"), linetype="dashed") +
      geom_vline(xintercept = as.Date("2021-10-13", format = "%Y-%m-%d"), linetype="dashed") +
      scale_y_continuous(
            # Features of the first axis
            name = "General mobility (%)",
            # Add a second axis and specify its features
            sec.axis = sec_axis(~.*coeff, name="Nº of cases")
      ) +
      facet_wrap(~provincia, scales = "free_y", ncol=1) +
      theme_bw() +
      theme(
            axis.title.y = element_text(color = temperatureColor, size=13),
            axis.title.y.right = element_text(color = priceColor, size=13)
      ) +
      ggtitle("General mobility vs number of cases")
```

## Correlations

From previous visual analysis, we will focus our attention in the following variables:

-   num_casos
-   num_hosp
-   tmed
-   mob_grocery_pharmacy
-   mob_parks
-   mob_residential
-   mob_retail_recreation
-   mob_transit_stations
-   mob_workplaces
-   mob_flujo

### Asturias

```{r}
#| warning = FALSE
data_asturias <- covid_data %>% 
      filter(provincia == "Asturias") %>% 
      select(num_casos, num_hosp, tmed, mob_grocery_pharmacy, mob_parks, mob_residential, mob_retail_recreation, mob_transit_stations, mob_workplaces, mob_flujo) %>% 
      drop_na()

chart.Correlation(data_asturias, histogram=TRUE, pch=19)
```

### Barcelona

```{r}
#| warning = FALSE
data_barcelona <- covid_data %>% 
      filter(provincia == "Barcelona") %>% 
      select(num_casos, num_hosp, tmed, mob_grocery_pharmacy, mob_parks, mob_residential, mob_retail_recreation, mob_transit_stations, mob_workplaces, mob_flujo) %>% 
      drop_na()

chart.Correlation(data_barcelona, histogram=TRUE, pch=19)
```

### Madrid

```{r}
#| warning = FALSE
data_madrid <- covid_data %>% 
      filter(provincia == "Madrid") %>% 
      select(num_casos, num_hosp, tmed, mob_grocery_pharmacy, mob_parks, mob_residential, mob_retail_recreation, mob_transit_stations, mob_workplaces, mob_flujo) %>% 
      drop_na()

chart.Correlation(data_madrid, histogram=TRUE, pch=19)
```

### Málaga

```{r}
#| warning = FALSE
data_malaga <- covid_data %>% 
      filter(provincia == "Málaga") %>% 
      select(num_casos, num_hosp, tmed, mob_grocery_pharmacy, mob_parks, mob_residential, mob_retail_recreation, mob_transit_stations, mob_workplaces, mob_flujo) %>% 
      drop_na()

chart.Correlation(data_malaga, histogram=TRUE, pch=19)
```

### Sevilla

```{r}
#| warning = FALSE
data_sevilla <- covid_data %>% 
      filter(provincia == "Sevilla") %>% 
      select(num_casos, num_hosp, tmed, mob_grocery_pharmacy, mob_parks, mob_residential, mob_retail_recreation, mob_transit_stations, mob_workplaces, mob_flujo) %>% 
      drop_na()

chart.Correlation(data_sevilla, histogram=TRUE, pch=19)
```

## PCA Analysis

### Asturias

```{r}
pca_asturias <- prcomp(data_asturias, scale = TRUE)
pca_asturias
```

```{r}
summary(pca_asturias)
```

```{r}
fviz_contrib(pca_asturias, choice = "var", axes = 1)
```

```{r}
fviz_contrib(pca_asturias, choice = "var", axes = 2)
```

```{r}
fviz_contrib(pca_asturias, choice = "var", axes = 3)
```

### Barcelona

```{r}
pca_barcelona <- prcomp(data_barcelona, scale = TRUE)
pca_barcelona
```

```{r}
summary(pca_barcelona)
```

```{r}
fviz_contrib(pca_barcelona, choice = "var", axes = 1)
```

```{r}
fviz_contrib(pca_barcelona, choice = "var", axes = 2)
```

```{r}
fviz_contrib(pca_barcelona, choice = "var", axes = 3)
```

### Madrid

```{r}
pca_madrid <- prcomp(data_madrid, scale = TRUE)
pca_madrid
```

```{r}
summary(pca_madrid)
```

```{r}
fviz_contrib(pca_madrid, choice = "var", axes = 1)
```

```{r}
fviz_contrib(pca_madrid, choice = "var", axes = 2)
```

```{r}
fviz_contrib(pca_madrid, choice = "var", axes = 3)
```

### Málaga

```{r}
pca_malaga <- prcomp(data_malaga, scale = TRUE)
pca_malaga
```

```{r}
summary(pca_malaga)
```

```{r}
fviz_contrib(pca_malaga, choice = "var", axes = 1)
```

```{r}
fviz_contrib(pca_malaga, choice = "var", axes = 2)
```

```{r}
fviz_contrib(pca_malaga, choice = "var", axes = 3)
```

### Sevilla

```{r}
pca_sevilla <- prcomp(data_sevilla, scale = TRUE)
pca_sevilla
```

```{r}
summary(pca_sevilla)
```

```{r}
fviz_contrib(pca_sevilla, choice = "var", axes = 1)
```

```{r}
fviz_contrib(pca_sevilla, choice = "var", axes = 2)
```

```{r}
fviz_contrib(pca_sevilla, choice = "var", axes = 3)
```
